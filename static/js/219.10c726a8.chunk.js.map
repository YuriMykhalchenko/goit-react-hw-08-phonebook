{"version":3,"file":"static/js/219.10c726a8.chunk.js","mappings":"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","sources":["components/ContactEditorForm/ContactEditorForm.jsx","components/EditContactlModal/EditMaterialModal.styled.js","components/EditContactlModal/EditContactModal.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n\nconst Text = styled.span`\n  font-size: 20px;\n`;\n\nconst Input = styled(Field)`\n  max-width: 100%;\n  margin-left: auto;\n  font-size: 20px;\n`;\nexport const ContactEditorForm = ({\n  initialValues = { name: '', number: '' },\n  onSubmit,\n  btnText,\n}) => {\n  const handleSubmit = async (values, actions) => {\n    await onSubmit(values);\n    actions.setSubmitting(false);\n    actions.resetForm();\n  };\n\n  const nameRegExp =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\n  const phoneRegExp =\n    /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n  let SignupSchema = yup.object().shape({\n    name: yup\n      .string()\n      .trim()\n      .matches(\n        nameRegExp,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required(),\n    number: yup\n      .string()\n      .matches(\n        phoneRegExp,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required(),\n  });\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={SignupSchema}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Box\n            component=\"span\"\n            sx={{\n              p: 2,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <label>\n              <Box component=\"div\" sx={{ p: 2, display: 'flex', gap: '10px' }}>\n                <Text>Name</Text>\n                <Input name=\"name\" type=\"text\" />\n              </Box>\n\n              <ErrorMessage name=\"name\" component=\"span\" />\n            </label>\n            <br />\n            <label>\n              <Box component=\"div\" sx={{ p: 2, display: 'flex', gap: '10px' }}>\n                <Text>Number</Text>\n                <Input name=\"number\" type=\"text\" />\n              </Box>\n              <ErrorMessage name=\"number\" component=\"span\" />\n            </label>\n            <br />\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting}\n              variant=\"contained\"\n              sx={{\n                height: 40,\n                width: 200,\n                ':hover': { backgroundColor: 'green' },\n              }}\n            >\n              {btnText}\n            </Button>\n          </Box>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Modal = styled.div`\n  padding: 24px;\n  background-color: #fff;\n  border-radius: 10px;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { ContactEditorForm } from 'components/ContactEditorForm/ContactEditorForm';\nimport { Overlay, Modal } from './EditMaterialModal.styled';\nimport { useParams } from 'react-router-dom';\nimport { useGetContactsQuery } from 'redux/contactsApi';\nimport { useUpdateContactMutation } from 'redux/contactsApi';\nimport { toast } from 'react-toastify';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n\nconst EditContactModal = () => {\n  const { contactId } = useParams();\n  const { data: contacts } = useGetContactsQuery();\n  const getContactById = id => contacts.find(contact => contact.id === id);\n  const contact = getContactById(contactId);\n  console.log(contact);\n  const contactName = contact.name;\n  const contactNumber = contact.number;\n  const [updateContact] = useUpdateContactMutation();\n  const navigate = useNavigate();\n  const closeModal = () => navigate('/goit-react-hw-08-phonebook/contacts');\n\n  const checkName = name =>\n    contacts.find(\n      searchedContact =>\n        searchedContact.name.toLowerCase() === name &&\n        searchedContact.id !== contact.id\n    );\n\n  const handleUpdateContact = async fields => {\n    const name = fields.name.toLowerCase();\n\n    if (checkName(name)) {\n      toast.error('This contact is already exist', {\n        position: 'top-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n      return;\n    }\n    try {\n      await updateContact({ id: contactId, ...fields });\n      closeModal();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Overlay>\n      <Modal>\n        <Box\n          component=\"div\"\n          sx={{\n            p: 2,\n            border: '1px dashed grey',\n            borderRadius: '5px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: '10px',\n          }}\n        >\n          {' '}\n          {contact && (\n            <ContactEditorForm\n              initialValues={{ name: contactName, number: contactNumber }}\n              btnText=\"Save changes\"\n              onSubmit={handleUpdateContact}\n            />\n          )}\n          <Button\n            type=\"button\"\n            onClick={closeModal}\n            variant=\"contained\"\n            sx={{\n              height: 40,\n              width: 200,\n              backgroundColor: 'orange',\n              ':hover': { backgroundColor: 'red' },\n            }}\n          >\n            Close\n          </Button>\n        </Box>\n      </Modal>\n    </Overlay>\n  );\n};\n\nexport default EditContactModal;\n"],"names":["Text","styled","Input","Field","ContactEditorForm","initialValues","name","number","onSubmit","btnText","handleSubmit","values","actions","setSubmitting","resetForm","SignupSchema","yup","shape","trim","matches","required","validationSchema","isSubmitting","Box","component","sx","p","display","flexDirection","alignItems","gap","type","Button","disabled","variant","height","width","backgroundColor","Overlay","Modal","id","contactId","useParams","contacts","useGetContactsQuery","data","contact","find","console","log","contactName","contactNumber","useUpdateContactMutation","updateContact","navigate","useNavigate","closeModal","checkName","searchedContact","toLowerCase","handleUpdateContact","fields","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","border","borderRadius","onClick"],"sourceRoot":""}